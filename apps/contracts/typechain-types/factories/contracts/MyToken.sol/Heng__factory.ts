/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Heng, HengInterface } from "../../../contracts/MyToken.sol/Heng";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_logoURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newLogoURI",
        type: "string",
      },
    ],
    name: "LogoUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "MinterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "MinterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logoURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_logoURI",
        type: "string",
      },
    ],
    name: "setLogoURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516122483803806122488339818101604052810190610032919061044b565b806040518060400160405280600481526020017f48656e67000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f48454e470000000000000000000000000000000000000000000000000000000081525081600390816100ae91906106c8565b5080600490816100be91906106c8565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906107a9565b60405180910390fd5b610142816101b260201b60201c565b50816006908161015291906106c8565b506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050506107c4565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102df82610296565b810181811067ffffffffffffffff821117156102fe576102fd6102a7565b5b80604052505050565b6000610311610278565b905061031d82826102d6565b919050565b600067ffffffffffffffff82111561033d5761033c6102a7565b5b61034682610296565b9050602081019050919050565b60005b83811015610371578082015181840152602081019050610356565b60008484015250505050565b600061039061038b84610322565b610307565b9050828152602081018484840111156103ac576103ab610291565b5b6103b7848285610353565b509392505050565b600082601f8301126103d4576103d361028c565b5b81516103e484826020860161037d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610418826103ed565b9050919050565b6104288161040d565b811461043357600080fd5b50565b6000815190506104458161041f565b92915050565b6000806040838503121561046257610461610282565b5b600083015167ffffffffffffffff8111156104805761047f610287565b5b61048c858286016103bf565b925050602061049d85828601610436565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104f957607f821691505b60208210810361050c5761050b6104b2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105747fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610537565b61057e8683610537565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006105c56105c06105bb84610596565b6105a0565b610596565b9050919050565b6000819050919050565b6105df836105aa565b6105f36105eb826105cc565b848454610544565b825550505050565b600090565b6106086105fb565b6106138184846105d6565b505050565b5b818110156106375761062c600082610600565b600181019050610619565b5050565b601f82111561067c5761064d81610512565b61065684610527565b81016020851015610665578190505b61067961067185610527565b830182610618565b50505b505050565b600082821c905092915050565b600061069f60001984600802610681565b1980831691505092915050565b60006106b8838361068e565b9150826002028217905092915050565b6106d1826104a7565b67ffffffffffffffff8111156106ea576106e96102a7565b5b6106f482546104e1565b6106ff82828561063b565b600060209050601f8311600181146107325760008415610720578287015190505b61072a85826106ac565b865550610792565b601f19841661074086610512565b60005b8281101561076857848901518255600182019150602085019450602081019050610743565b868310156107855784890151610781601f89168261068e565b8355505b6001600288020188555050505b505050505050565b6107a38161040d565b82525050565b60006020820190506107be600083018461079a565b92915050565b611a75806107d36000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a9059cbb11610071578063a9059cbb146102e4578063c30ff6df14610314578063dd62ed3e14610330578063f2fde38b14610360578063f46eccc41461037c57610121565b806370a0823114610252578063715018a6146102825780638da5cb5b1461028c57806395d89b41146102aa578063983b2d56146102c857610121565b80633092afd5116100f45780633092afd5146101c2578063313ce567146101de57806340c10f19146101fc57806342966c68146102185780636bb38b281461023457610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103ac565b60405161013b9190611263565b60405180910390f35b61015e60048036038101906101599190611323565b61043e565b60405161016b919061137e565b60405180910390f35b61017c610461565b60405161018991906113a8565b60405180910390f35b6101ac60048036038101906101a791906113c3565b61046b565b6040516101b9919061137e565b60405180910390f35b6101dc60048036038101906101d79190611416565b61049a565b005b6101e6610540565b6040516101f3919061145f565b60405180910390f35b61021660048036038101906102119190611323565b610549565b005b610232600480360381019061022d919061147a565b6105e3565b005b61023c6105f0565b6040516102499190611263565b60405180910390f35b61026c60048036038101906102679190611416565b61067e565b60405161027991906113a8565b60405180910390f35b61028a6106c6565b005b6102946106da565b6040516102a191906114b6565b60405180910390f35b6102b2610704565b6040516102bf9190611263565b60405180910390f35b6102e260048036038101906102dd9190611416565b610796565b005b6102fe60048036038101906102f99190611323565b61083c565b60405161030b919061137e565b60405180910390f35b61032e60048036038101906103299190611536565b61085f565b005b61034a60048036038101906103459190611583565b6108b6565b60405161035791906113a8565b60405180910390f35b61037a60048036038101906103759190611416565b61093d565b005b61039660048036038101906103919190611416565b6109c3565b6040516103a3919061137e565b60405180910390f35b6060600380546103bb906115f2565b80601f01602080910402602001604051908101604052809291908181526020018280546103e7906115f2565b80156104345780601f1061040957610100808354040283529160200191610434565b820191906000526020600020905b81548152906001019060200180831161041757829003601f168201915b5050505050905090565b6000806104496109e3565b90506104568185856109eb565b600191505092915050565b6000600254905090565b6000806104766109e3565b90506104838582856109fd565b61048e858585610a92565b60019150509392505050565b6104a2610b86565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60006012905090565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cc9061166f565b60405180910390fd5b6105df8282610c0d565b5050565b6105ed3382610c8f565b50565b600680546105fd906115f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610629906115f2565b80156106765780601f1061064b57610100808354040283529160200191610676565b820191906000526020600020905b81548152906001019060200180831161065957829003601f168201915b505050505081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106ce610b86565b6106d86000610d11565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610713906115f2565b80601f016020809104026020016040519081016040528092919081815260200182805461073f906115f2565b801561078c5780601f106107615761010080835404028352916020019161078c565b820191906000526020600020905b81548152906001019060200180831161076f57829003601f168201915b5050505050905090565b61079e610b86565b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6000806108476109e3565b9050610854818585610a92565b600191505092915050565b610867610b86565b818160069182610878929190611875565b507fc778f70d50b8182c1a6ee1b11efa714a627c4aa1a04d69a579e6ce27ba3b32eb82826040516108aa929190611981565b60405180910390a15050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610945610b86565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109b75760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109ae91906114b6565b60405180910390fd5b6109c081610d11565b50565b60076020528060005260406000206000915054906101000a900460ff1681565b600033905090565b6109f88383836001610dd7565b505050565b6000610a0984846108b6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a8c5781811015610a7c578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a73939291906119a5565b60405180910390fd5b610a8b84848484036000610dd7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b045760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610afb91906114b6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b765760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b6d91906114b6565b60405180910390fd5b610b81838383610fae565b505050565b610b8e6109e3565b73ffffffffffffffffffffffffffffffffffffffff16610bac6106da565b73ffffffffffffffffffffffffffffffffffffffff1614610c0b57610bcf6109e3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c0291906114b6565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c7f5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c7691906114b6565b60405180910390fd5b610c8b60008383610fae565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d015760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610cf891906114b6565b60405180910390fd5b610d0d82600083610fae565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e495760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e4091906114b6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ebb5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610eb291906114b6565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610fa8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f9f91906113a8565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611000578060026000828254610ff49190611a0b565b925050819055506110d3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561108c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611083939291906119a5565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361111c5780600260008282540392505081905550611169565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111c691906113a8565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561120d5780820151818401526020810190506111f2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611235826111d3565b61123f81856111de565b935061124f8185602086016111ef565b61125881611219565b840191505092915050565b6000602082019050818103600083015261127d818461122a565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112ba8261128f565b9050919050565b6112ca816112af565b81146112d557600080fd5b50565b6000813590506112e7816112c1565b92915050565b6000819050919050565b611300816112ed565b811461130b57600080fd5b50565b60008135905061131d816112f7565b92915050565b6000806040838503121561133a57611339611285565b5b6000611348858286016112d8565b92505060206113598582860161130e565b9150509250929050565b60008115159050919050565b61137881611363565b82525050565b6000602082019050611393600083018461136f565b92915050565b6113a2816112ed565b82525050565b60006020820190506113bd6000830184611399565b92915050565b6000806000606084860312156113dc576113db611285565b5b60006113ea868287016112d8565b93505060206113fb868287016112d8565b925050604061140c8682870161130e565b9150509250925092565b60006020828403121561142c5761142b611285565b5b600061143a848285016112d8565b91505092915050565b600060ff82169050919050565b61145981611443565b82525050565b60006020820190506114746000830184611450565b92915050565b6000602082840312156114905761148f611285565b5b600061149e8482850161130e565b91505092915050565b6114b0816112af565b82525050565b60006020820190506114cb60008301846114a7565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114f6576114f56114d1565b5b8235905067ffffffffffffffff811115611513576115126114d6565b5b60208301915083600182028301111561152f5761152e6114db565b5b9250929050565b6000806020838503121561154d5761154c611285565b5b600083013567ffffffffffffffff81111561156b5761156a61128a565b5b611577858286016114e0565b92509250509250929050565b6000806040838503121561159a57611599611285565b5b60006115a8858286016112d8565b92505060206115b9858286016112d8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061160a57607f821691505b60208210810361161d5761161c6115c3565b5b50919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611659600e836111de565b915061166482611623565b602082019050919050565b600060208201905081810360008301526116888161164c565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261172b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826116ee565b61173586836116ee565b95508019841693508086168417925050509392505050565b6000819050919050565b600061177261176d611768846112ed565b61174d565b6112ed565b9050919050565b6000819050919050565b61178c83611757565b6117a061179882611779565b8484546116fb565b825550505050565b600090565b6117b56117a8565b6117c0818484611783565b505050565b5b818110156117e4576117d96000826117ad565b6001810190506117c6565b5050565b601f821115611829576117fa816116c9565b611803846116de565b81016020851015611812578190505b61182661181e856116de565b8301826117c5565b50505b505050565b600082821c905092915050565b600061184c6000198460080261182e565b1980831691505092915050565b6000611865838361183b565b9150826002028217905092915050565b61187f838361168f565b67ffffffffffffffff8111156118985761189761169a565b5b6118a282546115f2565b6118ad8282856117e8565b6000601f8311600181146118dc57600084156118ca578287013590505b6118d48582611859565b86555061193c565b601f1984166118ea866116c9565b60005b82811015611912578489013582556001820191506020850194506020810190506118ed565b8683101561192f578489013561192b601f89168261183b565b8355505b6001600288020188555050505b50505050505050565b82818337600083830152505050565b600061196083856111de565b935061196d838584611945565b61197683611219565b840190509392505050565b6000602082019050818103600083015261199c818486611954565b90509392505050565b60006060820190506119ba60008301866114a7565b6119c76020830185611399565b6119d46040830184611399565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a16826112ed565b9150611a21836112ed565b9250828201905080821115611a3957611a386119dc565b5b9291505056fea264697066735822122027e8fe360b7ecf68e83389a6caa01b975af420a1fc8558c52dd9f1352cc4932764736f6c634300081c0033";

type HengConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HengConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Heng__factory extends ContractFactory {
  constructor(...args: HengConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _logoURI: string,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_logoURI, initialOwner, overrides || {});
  }
  override deploy(
    _logoURI: string,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_logoURI, initialOwner, overrides || {}) as Promise<
      Heng & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Heng__factory {
    return super.connect(runner) as Heng__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HengInterface {
    return new Interface(_abi) as HengInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Heng {
    return new Contract(address, _abi, runner) as unknown as Heng;
  }
}
